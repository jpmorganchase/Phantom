# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Workflow

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  # lint-black:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: psf/black@stable

  enforce-black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    
    - name: Set up action
      run: |
        python -m pip install --upgrade pip
        pip install black

    - name: Enforce black formatting
      run: |
        black .

    # - name: Commit files
    #   run: |
    #     git config --local user.email "black@black.black"
    #     git config --local user.name "Black Code Formatter"
    #     if [[ `git status --porcelain` ]]; then git commit -m "style: apply black formatting" -a; else echo "No changes"; fi

    # - name: Push commit
    #   run: |
    #     git push https://${{ secrets.GITHUB_PAT }}@github.com/jpmorganchase/Phantom.git

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "style: apply black formatting"

        # Optional. Used by `git-commit`.
        # See https://git-scm.com/docs/git-commit#_options
        # commit_options: '--no-verify --signoff'

        # Optional commit user and author settings
        # commit_user_name: My GitHub Actions Bot # defaults to "GitHub Actions"
        # commit_user_email: my-github-actions-bot@example.org # defaults to "actions@github.com"
        # commit_author: Author <actions@github.com> # defaults to author of the commit that triggered the run

  lint-flake8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Set up action
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test-mercury:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r mercury/requirements.txt
        pip install -r mercury/requirements-dev.txt
    
    - name: Install Mercury
      run: |
        cd mercury
        python setup.py develop --user -O2

    - name: Run Mercury tests
      run: |
        cd mercury
        pytest tests

  test-phantom:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r mercury/requirements.txt
        pip install -r phantom/requirements.txt
        pip install -r phantom/requirements-dev.txt

        cd mercury
        python setup.py develop --user -O2
    
    - name: Install Phantom
      run: |
        cd phantom
        python setup.py develop --user -O2
    
    - name: Run Phantom tests
      run: |
        cd phantom
        pytest tests
